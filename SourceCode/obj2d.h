#ifndef OBJ2D_H
#define OBJ2D_H

//******************************************************************************
//
//
//      obj2d.h
//
//
//******************************************************************************

//------< 構造体 >--------------------------------------------------------------
struct OBJ2D
{
#if 13
//******************************************************************************
// TODO:13 関数ポインタをtypedef宣言する
//------------------------------------------------------------------------------
/*
課題）
    void(*moveAlg)(OBJ2D*)と書けるようになってきたと思います。これが書ける事も
    大事なのですが、これを簡単に書ける事も学習しておきましょう。[プリント参照]

手順）
    1.  設問01番で宣言した関数ポインタをコメントアウトする。（削除しても良い）
    2.  ここで戻り値がvoid型で引数がOBJ2D*である関数のポインタ型をtypedefで名前
        をつける。（名前はFUNC_PTR）
    3.  その下の行でFUNC_PTR型のmoveAlgを宣言する。
*/
//******************************************************************************
#endif
    //TODO_13


    int                 state;      // 状態
    int                 timer;      // タイマー

#if 1
//******************************************************************************
// TODO:01 関数ポインタの利用
//------------------------------------------------------------------------------
/*
課題）
    関数ポインタを使い、効率的にコーディングしていけるようにします。

手順）
    1.  下記のint moveAlg;をコメントアウトする。

    2.  下記で戻り値void型で、引数がOBJ2D*である関数のポインタmoveAlgを宣言
        します。[プリント参照]
*/
//******************************************************************************
#endif
    //TODO_01
    int                 moveAlg;    // 移動アルゴリズム（仮）


    bool                onGround;   // 地面フラグ
    bool                jumpEnd;    // 着地フラグ
    char                pad[2];     // パディング（隙間）

    GameLib::Sprite*    spr;        // スプライトポインタ
    int                 area;       // エリア
    VECTOR2             pos;        // 位置
    VECTOR2             scale;      // スケール
    VECTOR2             texPos;     // 画像位置
    VECTOR2             texSize;    // 画像サイズ
    VECTOR2             pivot;      // 基準点
    VECTOR4             color;      // 色

    VECTOR2             speed;      // 速度
    int                 jumpCount;  // 残りジャンプ回数
    int                 act;        // プレイヤーの行動遷移用
    int                 anime;      // アニメが現在何コマ目か
    int                 animeTimer; // アニメ用タイマー

    float               radius;     // 半径
    VECTOR2             offset;     // 位置からあたり領域の中心へのオフセット

#if 16
//******************************************************************************
// TODO:16 初期位置を保持するための変数を宣言
//------------------------------------------------------------------------------
/*
課題）
    ここからが敵の行動です。
    今回作成する敵の行動関数では、敵の初期位置を保持しておく必要がありますので
    ここで宣言しておきましょう。

手順）
    下記でVECTOR2型のoriginを宣言する。
*/
//******************************************************************************
#endif
    //TODO_16
    

#if 20
//******************************************************************************
// TODO:20 角度を保持するための変数を宣言
//------------------------------------------------------------------------------
/*
課題）
    次に作成する敵1は、角度の値を使って回転させるので、ここで角度を意味する変数
    を宣言しておきましょう。

手順）
    float型の変数angleを宣言すること。
*/
//******************************************************************************
#endif
    //TODO_20

};

//------< 関数 >----------------------------------------------------------------
#if 14
//******************************************************************************
// TODO:14 searchSet0関数の第3引数をFUNC_PTR型に変更しておく
//------------------------------------------------------------------------------
/*
課題）
    searchSet0関数の第3引数をFUNC_PTR型のmoveAlgに変えておきましょう。
    わかりやすくなるはずです。
    なお、OBJ2D構造体の中で宣言をしたため、OBJ2D::FUNC_PTR型とする必要があります。
    プロトタイプ宣言だけではなく、関数の方も変更しておきましょう。
*/
//******************************************************************************
#endif
#if 11
//******************************************************************************
// TODO:11 searchSet0関数のプロトタイプ宣言を変更しておく
//------------------------------------------------------------------------------
/*
課題）
    searchSet0関数の引数を変更したので、プロトタイプ宣言も変更しておきましょう。
*/
//******************************************************************************
#endif
//TODO_11
OBJ2D* searchSet0(OBJ2D arr[], int dataNum, int moveAlg, VECTOR2 pos);

#endif//OBJ2D_H